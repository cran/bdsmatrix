
R version 3.0.2 (2013-09-25) -- "Frisbee Sailing"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #
> # Make sure things work in the simpler case of no rmat component
> #
> library(bdsmatrix)

Attaching package: 'bdsmatrix'

The following object is masked from 'package:base':

    backsolve

> aeq <- function(x,y) all.equal(as.vector(x), as.vector(y))
> 
> tmat <- bdsmatrix(blocksize= c(3,2,2,4), 
+               blocks= c(22,1,2,21,3,20,19,4,18,17,5,16,15,6,7, 
+                         8,14,9,10,13,11,12))
> dimnames(tmat) <- list(NULL, letters[1:11])
> smat <- as.matrix(tmat)
> yy <- c(30,35,42,56,34,45,32,37,78,56,40)
> 
> aeq(diag(tmat), diag(smat))
[1] TRUE
> zz <- seq(1,11,2)
> aeq(as.matrix(tmat[zz,zz]), smat[zz,zz])
[1] TRUE
> 
> ch0 <- chol(smat)
> ch1 <- gchol(smat)
> ch2 <- gchol(tmat)
> 
> aeq(diag(ch1), diag(ch2))
[1] TRUE
> temp <- as.matrix(ch2)
> aeq(temp, as.matrix(ch1))
[1] TRUE
> temp3 <- temp %*% diag(sqrt(diag(ch2))) 
> aeq(temp3, t(ch0))
[1] TRUE
> 
> zz0 <- solve(smat, yy)
> zz1 <- solve(ch1, yy)
> zz2 <- solve(tmat, yy)
> aeq(zz1, zz2)
[1] TRUE
> aeq(zz0, zz1)
[1] TRUE
> 
> proc.time()
   user  system elapsed 
  0.851   0.038   0.906 
